buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jooq:jooq-codegen:3.5.4")
        classpath 'org.jooq:jooq-meta-extensions:3.11.0'
        classpath("mysql:mysql-connector-java:5.1.37")
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin : 'org.flywaydb.flyway'

group = 'com.kazys'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    compile 'org.jooq:jooq:3.5.4'
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'mysql:mysql-connector-java'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'
    compile group: 'org.modelmapper.extensions', name: 'modelmapper-jooq', version: '2.3.2'
    testCompile 'junit:junit:4.11'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

flyway {
    url = 'jdbc:mysql://localhost:3306'
    user = 'root'
    password = 'root'
    schemas = ['notes']
}

def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.5.0.xsd') {
    jdbc() {
        driver('com.mysql.jdbc.Driver')
        url('jdbc:mysql://localhost:3306/notes')
        user('root')
        username('root')
        password('root')
    }
    generator() {
        database() {
        }
        generate([:]) {
            pojos true
            daos true
        }
        target() {
            packageName('com.kazys.noteapi')
            directory('src/main/java/db')
        }
    }
}

org.jooq.util.GenerationTool.generate(writer.toString())